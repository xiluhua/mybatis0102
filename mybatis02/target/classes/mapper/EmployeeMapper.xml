<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 配置SQL映射 
	 namespace: 名称空间. 
	 		1. 随便写
	 		2. Mapper接口开发，不能随便写，按照规定来写。
 -->
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">
    <!--
        <select>: 定义查询语句
            id:  <select>的唯一标识
            resultType:  结果集的映射类型。
            #{id}: 获取参数值
     -->
    <!-- public Employee getEmployeeById(Integer id ); -->
    <select id="getEmployeeById" resultType="com.atguigu.mybatis.beans.Employee">
        select id, last_name lastName, email, gender,create_time from tbl_employee where id = #{id}
    </select>

    <!-- public void addEmployee(Employee employee);
		 parameterType:指定参数类型. 可以省略不配置.
		 useGeneratedKeys:告诉Mybatis使用主键自增的方式
		 keyProperty:  指定用对象的哪个属性保存Mybatis返回的主键值
	-->
    <insert id="addEmployee" parameterType="com.atguigu.mybatis.beans.Employee"
            useGeneratedKeys="true" keyProperty="id">
        insert into tbl_employee (last_name, email,gender,create_time) values(#{lastName},#{email},#{gender},#{createTime})
    </insert>

    <!-- public void updateEmployee(Employee employee); -->
    <update id="updateEmployee" >
        update tbl_employee set
        last_name = #{lastName},
        email = #{email},
        gender = #{gender}
        where id = #{id}
    </update>

    <!-- public void deleteEmployeeById(Integer id ); -->
    <delete id="deleteEmployeeById" >
        delete from tbl_employee where id = #{id}
    </delete>

    <!-- public Employee  getEmployeeByIdAndLastName(Integer id, String lastName); -->
    <!--第一种写法-->
    <!--<select id="getEmployeeByIdAndLastName" resultType="com.atguigu.mybatis.beans.Employee">-->
        <!--select id, last_name, email,gender, create_time from tbl_employee where id = #{0}  and last_name = #{1}-->
    <!--</select>-->
    <!--第二种写法-->
    <select id="getEmployeeByIdAndLastName" resultType="com.atguigu.mybatis.beans.Employee">
        select id, last_name, email,gender, create_time from tbl_employee where id = #{id}  and last_name = #{lastName}
    </select>

    <!-- public Employee getEmployeeByMap(Map<String,Object> map); -->
    <select id="getEmployeeByMap" resultType="com.atguigu.mybatis.beans.Employee">
        select id, last_name, email,gender from tbl_employee where id = #{id}  and last_name = #{ln}
    </select>

    <!--public Employee getEmployeeByMapDynamicTable(Map<String, Object> map);-->
    <select id="getEmployeeByMapDynamicTable" resultType="com.atguigu.mybatis.beans.Employee">
        select id, last_name, email,gender from ${tbl} where id = #{id}  and last_name = #{ln}
    </select>

    <!--day 2-->
    <!-- public List<Employee> getEmps();
		resultType: 结果集的封装类型.
	-->
    <select id="getEmps" resultType="com.atguigu.mybatis.beans.Employee">
        select id,last_name,email,gender from tbl_employee
    </select>

    <!-- public Map<String, Object> getEmployeeByIdReturnMap(Integer id ); -->
    <select id="getEmployeeByIdReturnMap" resultType="java.util.HashMap">
        select id,last_name,email,gender from tbl_employee where id = #{id}
    </select>

    <!-- public Map<Integer,Employee>  getEmpsReturnMap(); -->
    <select id="getEmpsReturnMap" resultType="com.atguigu.mybatis.beans.Employee">
        select id,last_name,email,gender from tbl_employee
    </select>
</mapper>
